#BlueJ class context
comment0.params=
comment0.target=MidiPlayer()
comment0.text=\r\n\ Creates\ a\ new\ MidiPlayer\ object\r\n\r\n
comment1.params=filename
comment1.target=javax.sound.midi.Sequence\ getSequence(java.lang.String)
comment1.text=\r\n\ Loads\ a\ sequence\ from\ the\ file\ system.\ Returns\ null\ if\ an\ error\ occurs\r\n\ @param\ filename\ The\ filename\ of\ the\ MIDI\ file\r\n\ @return\ A\ Sequence\ object\ corresponding\ to\ this\ MIDI\ file\r\n
comment2.params=sequence\ loop
comment2.target=void\ play(javax.sound.midi.Sequence,\ boolean)
comment2.text=\r\n\ Plays\ a\ sequence,\ optionally\ looping.\ This\ method\ returns\ immediately.\ The\ sequence\ is\r\n\ not\ played\ if\ it\ is\ invalid\r\n\ @param\ sequence\ The\ Sequence\ to\ play\r\n\ @param\ loop\ Set\ to\ true\ to\ loop\ forever,\ false\ to\ terminate\ after\ the\ end\ of\ the\ sequence\r\n
comment3.params=event
comment3.target=void\ meta(javax.sound.midi.MetaMessage)
comment3.text=\r\n\ This\ method\ is\ called\ by\ the\ sound\ system\ when\ a\ meta\ event\ occurs.\ In\ this\ case,\r\n\ when\ the\ end-of-track\ meta\ event\ is\ received,\ the\ sequence\ is\ restarted\ if\ looping\ is\ on.\r\n
comment4.params=
comment4.target=void\ stop()
comment4.text=\r\n\ Stops\ the\ sequencer\ and\ resets\ its\ position\ to\ 0\r\n\r\n
comment5.params=
comment5.target=void\ close()
comment5.text=\r\n\ Closes\ the\ sequencer\r\n\r\n
comment6.params=
comment6.target=javax.sound.midi.Sequencer\ getSequencer()
comment6.text=\r\n\ Gets\ the\ sequencer\r\n\ @return\ The\ Sequencer\ object\r\n
comment7.params=paused
comment7.target=void\ setPaused(boolean)
comment7.text=\r\n\ Sets\ the\ paused\ state.\ Music\ may\ not\ immediately\ pause\r\n\ @param\ paused\ Set\ to\ true\ to\ pause\ the\ sequencer,\ false\ to\ restart\r\n
comment8.params=
comment8.target=boolean\ isPaused()
comment8.text=\r\n\ Gets\ the\ paused\ state\r\n\ @return\ true\ if\ the\ sequencer\ is\ paused,\ false\ otherwise\r\n
numComments=9
